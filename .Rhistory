group = factor(c(1, 1,1, 2, 2, 2))
group
x <- ~group
x
print(x)
x <- ~ 0+group
x
model.matrix(~0+group)
model.matrix(~group)
getwd()
setwd("D:/proj_epigen/aging_clocks")
# IMPORTS
library(dplyr)
library(rjson)
# FUNCTIONS
source("R_scripts/functions.R")
# load config.json file
params <- fromJSON(file="config.json")
CpG_file <- params[["CpG_file"]]
G4_file_plus <- params[["G4_file_plus"]]
G4_file_minus <- params[["G4_file_minus"]]
chain_file <- params[["chain_file"]]
genome_file <- params[["genome_file"]]
window_size_CpG_dist_plot <- params[["window_size_CpG_dist_plot"]]
all_CpGs_file <- params[["all_CpGs_file"]]
window_sizes <- params[["window_sizes"]]
# 1) Load G4 data and catenate both strands
G4_locs <- load_G4_data(G4_file_plus, G4_file_minus)
# 2) Load CpG data and convert from .csv to .bed format
CpG_locs <- load_CpG_data(CpG_file = CpG_file)
# 3) Lift over coordinates
CpG_locs <- lift_over(coordinates=CpG_locs, chain_file=chain_file)
# 3.5b) Or read data from file (SHORT execution time)
results_all_CpGs <- read.csv(file="out/all_CpGs_props/all_CpGs_props_all_G4s.csv", header=T, sep=";")
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(results)
?match
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(overlap_coor)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
params <- fromJSON(file="config.json")
CpG_file <- params[["CpG_file"]]
G4_file_plus <- params[["G4_file_plus"]]
G4_file_minus <- params[["G4_file_minus"]]
chain_file <- params[["chain_file"]]
genome_file <- params[["genome_file"]]
window_size_CpG_dist_plot <- params[["window_size_CpG_dist_plot"]]
all_CpGs_file <- params[["all_CpGs_file"]]
window_sizes <- params[["window_sizes"]]
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(results)
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s", figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
View(results)
results["stats"]
results["overlap_coordinates"]
# 5) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s", figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
x <- overlap_results[["stats"]]
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s", figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
View(overlap_coor)
View(overlap_coor)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s", figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
View(overlap_coor)
View(results)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s", figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
force(query_name)
force(overlap_results)
View(overlap_results)
x <- overlap_results["overlap_coordinates"]
View(x)
x <- overlap_results[["overlap_coordinates"]]
View(x)
View(overlap_coor)
overlap_coor <- overlap_results[["overlap_coordinates"]]
overlap_coor <- overlap_results["overlap_coordinates"]
View(overlap_coor)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s", figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
View(overlap_coor)
View(overlap_coor)
View(overlap_coor)
View(overlap_coor)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(overlap_coor_temp)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
overlap_coor_temp$start
query$start
query$start %in% overlap_coor_temp$start
View(overlap_coor)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
re0sults <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
overlap_coor[i] <- x
overlap_coor <- list()
overlap_coor[i] <- x
y <- list(x)
View(y)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(overlap_coor)
View(overlap_coor)
overlap_coor[i] <- list(query%>% filter(start %in% overlap_coor_temp$start))
overlap_coor[i] <- (query%>% filter(start %in% overlap_coor_temp$start))
x <- (query%>% filter(start %in% overlap_coor_temp$start))
query$start %in% overlap_coor_temp$start
View(query)
View(overlap_coor_temp)
View(CpG_locs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(overlap_coor)
View(overlap_coor)
View(results)
params <- fromJSON(file="config.json")
CpG_file <- params[["CpG_file"]]
G4_file_plus <- params[["G4_file_plus"]]
G4_file_minus <- params[["G4_file_minus"]]
chain_file <- params[["chain_file"]]
genome_file <- params[["genome_file"]]
window_size_CpG_dist_plot <- params[["window_size_CpG_dist_plot"]]
all_CpGs_file <- params[["all_CpGs_file"]]
window_sizes <- params[["window_sizes"]]
CGI_map_file <- params[["CGI_map_file"]]
### Function to add columns to CpG_locs dataframe, such as CGI context
CGI_coordinates <- read.csv(CGI_map_file, sep="\t", col.names = c("chromosome", "start", "end", "name", "?", "??"))
View(CGI_coordinates)
CGI_coordinates <- CGI_coordinates[,c("chromosome", "start", "end")]
View(CGI_coordinates)
CpGs_in_CGIs <- overlap(query=CpG_locs, search_set=CGI_coordinates, reduce=T)
CpGs_outside_CGIs <- CpG_locs %>% filter(start !%in% CpGs_in_CGIs)
CpGs_outside_CGIs <- CpG_locs %>% filter(!start %in% CpGs_in_CGIs)
CpGs_outside_CGIs <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start)
# Overlap CpGs with CGI map to get CpGs in CGIs
CpGs_in_CGIs <- overlap(query=CpG_locs, search_set=CGI_coordinates, reduce=T)
View(CpGs_in_CGIs)
View(CpGs_outside_CGIs)
CpGs_outside_CGIs <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start) %>% arrange(chromosome, start)
View(CpGs_outside_CGIs)
CpGs_in_CGIs <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start) %>% arrange(chromosome, start)
# Overlap CpGs with CGI map to get CpGs in CGIs
CpGs_in_CGIs <- overlap(query=CpG_locs, search_set=CGI_coordinates, reduce=T)
# Overlap CpGs with CGI map to get CpGs in CGIs
CpGs_in_CGIs <- overlap(query=CpG_locs, search_set=CGI_coordinates, reduce=T)
CpGs_in_CGIs <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end) %>% arrange(chromosome, start)
# Overlap CpGs with CGI map to get CpGs in CGIs
CpGs_in_CGIs <- overlap(query=CpG_locs, search_set=CGI_coordinates, reduce=T)
CpGs_in_CGIs_ <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end) %>% arrange(chromosome, start)
View(CpGs_in_CGIs_)
View(CpGs_in_CGIs)
match(CpGs_in_CGIs, CpGs_in_CGIs_)
match(CpGs_in_CGIs$start, CpGs_in_CGIs_$start)
match(CpGs_in_CGIs$start %in% CpGs_in_CGIs_$start)
CpGs_in_CGIs$start %in% CpGs_in_CGIs_$start
CpGs_in_CGIs_$start %in% CpGs_in_CGIs$start
View(CpGs_in_CGIs_)
View(CpG_locs)
CpG_locs <- CpG_locs %>% arrange(chromosome, start)
View(CpG_locs)
# 2) Load CpG data and convert from .csv to .bed format
CpG_locs <- load_CpG_data(CpG_file = CpG_file)
CpG_locs_r <- makeGRangesFromDataFrame(CpG_locs)
CpG_locs_red_r <- GenomicRanges::reduce(CpG_locs_r)
CpG_locs_red <- GRanges_to_df(CpG_locs_red_r)
# IMPORTS
library(dplyr)
library(rjson)
# FUNCTIONS
source("R_scripts/functions.R")
# load config.json file
params <- fromJSON(file="config.json")
CpG_file <- params[["CpG_file"]]
G4_file_plus <- params[["G4_file_plus"]]
G4_file_minus <- params[["G4_file_minus"]]
chain_file <- params[["chain_file"]]
genome_file <- params[["genome_file"]]
window_size_CpG_dist_plot <- params[["window_size_CpG_dist_plot"]]
all_CpGs_file <- params[["all_CpGs_file"]]
window_sizes <- params[["window_sizes"]]
CGI_map_file <- params[["CGI_map_file"]]
# 1) Load G4 data and catenate both strands
G4_locs <- load_G4_data(G4_file_plus, G4_file_minus)
# 2) Load CpG data and convert from .csv to .bed format
CpG_locs <- load_CpG_data(CpG_file = CpG_file)
# 3) Lift over coordinates
CpG_locs <- lift_over(coordinates=CpG_locs, chain_file=chain_file)
# Load the CGI map
CGI_coordinates <- read.csv(CGI_map_file, sep="\t", col.names = c("chromosome", "start", "end", "name", "?", "??"))
library(dplyr)
CGI_coordinates <- CGI_coordinates[,c("chromosome", "start", "end")]
# Overlap CpGs with CGI map to get CpGs in CGIs
CpGs_in_CGIs <- overlap(query=CpG_locs, search_set=CGI_coordinates, reduce=T)
CpGs_in_CGIs_ <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end) %>% arrange(chromosome, start)
CpGs_outside_CGIs <- CpG_locs %>% filter(!(start %in% CpGs_in_CGIs$start &end %in% CpGs_in_CGIs&end)) %>% arrange(chromosome, start)
CpGs_outside_CGIs <- CpG_locs %>% filter(!(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end)) %>% arrange(chromosome, start)
View(CpGs_outside_CGIs)
View(CpGs_in_CGIs)
CpGs_in_CGIs <- CpG_locs %>% filter(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end) %>% arrange(chromosome, start)
View(CpGs_in_CGIs)
CpGs_outside_CGIs <- CpG_locs %>%
filter(!(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end)) %>% arrange(chromosome, start)
CpGs_in_CGIs <- CpG_locs %>%
filter(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end) %>%
arrange(chromosome, start) %>%
mutate(CGI_context="inside")
CpGs_outside_CGIs <- CpG_locs %>%
filter(!(start %in% CpGs_in_CGIs$start & end %in% CpGs_in_CGIs$end)) %>%
arrange(chromosome, start) %>%
mutate(CGI_context="outside")
CpGs_annotated <- rbind(CpGs_in_CGIs, CpGs_outside_CGIs)
View(CpGs_annotated)
CpGs_annotated <- rbind(CpGs_in_CGIs, CpGs_outside_CGIs) %>% arrange(chromosome, start)
View(CpGs_annotated)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 3) Lift over coordinates
CpG_locs <- lift_over(coordinates=CpG_locs, chain_file=chain_file)
# 4) Annotate CpGs according to CGI context
CpG_locs <- annotate_CpGs(coordinates=CpG_locs, CGI_map_file=CGI_map_file)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 4) Annotate CpGs according to CGI context
CpG_locs <- annotate_CpGs(CpG_coordinates=CpG_locs, CGI_map_file=CGI_map_file)
View(CpG_locs)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(results)
?find
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
stats$window_size
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
force(window_size)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
as.character(stats$window_size)
window_size
match(window_size, stats$window_size)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf")
View(overlap_ws)
#plot chromosome distribution
ggplot(overlap_ws) +
geom_bar(aes(x=chr)) +
facet_grid(correlation~.)
#plot chromosome distribution
ggplot(overlap_ws) +
geom_bar(aes(x=chr)) +
facet_grid(coefficient~.)
#plot chromosome distribution
ggplot(overlap_ws) +
geom_bar(aes(x=chromosome)) +
facet_grid(coefficient~.)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
overlap_coor_temp[1]
overlap_coor
overlap_coor[:]
overlap_coor[]
overlap_coor[1]
overlap_coor_temp
overlap_coor[i] %>% filter(coefficient >0)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
overlap_coor[i]
overlap_coor[[i]]
overlap_coor[[i]] %>% filter(chromosome>0)
overlap_coor[[i]] %>% filter(coefficient>0)
overlap_coor[[i]] %>% filter(coefficient>0) %>% dim()[1]
dim(overlap_coor[[i]] %>% filter(coefficient>0))[1]
dim(overlap_coor[[i]] %>% filter(coefficient<0))[1]
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(results)
results$stats
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
debugSource('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
View(overlap_coor)
View(results)
results$stats
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
# FUNCTIONS
source("R_scripts/functions.R")
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
source('D:/proj_epigen/aging_clocks/R_scripts/functions.R', echo=TRUE)
# 5) Analyse window size
results <- analyse_window_size(query=CpG_locs, search_set=G4_locs, genome_file=genome_file, window_sizes=window_sizes, all_CpGs_props=results_all_CpGs)
results$overlap_coordinates
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")
# 6) Plot results
plot_results(overlap_results=results, query_name="CpGs", search_set_name="G4s",
window_size=window_size_CpG_dist_plot,
figure_name_window_size = "out/test_window_size_vs_enrichtment.pdf",
figure_name_coeff_dist = "out/test_coefficient_dist.pdf",
figure_name_CGI_dist = "out/test_CGI_context_dist.pdf")

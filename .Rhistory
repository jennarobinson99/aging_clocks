group = factor(c(1, 1,1, 2, 2, 2))
group
x <- ~group
x
print(x)
x <- ~ 0+group
x
model.matrix(~0+group)
model.matrix(~group)
getwd()
library(tidyverse)
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg38)
# load genome
genome <- BSgenome.Hsapiens.UCSC.hg38
chromosomes <-seqnames(genome)[0:24]
pattern <- "CG"
# get number of CpGs in all chromosomes and find genomic coordinates
CpG_occurence <- vector(mode='list', length=25)
names(CpG_occurence) <- c(chromosomes, 'total')
total <- 0
CpG_coordinates <- tibble()
# loop through chromosomes to get CpGs for each one
for (chr_name in chromosomes) {
current_chr <- genome[[chr_name]]
#count CpG occurence and save in named list
n <- countPattern(pattern, current_chr)
CpG_occurence[chr_name] <- n
total <- total + n
#match pattern to get genomic coordinates of each CpG
seqs <- matchPattern(pattern, current_chr) #gets XStringView object of coordinates
seqs <- as(seqs, "IRanges") #convert object to IRanges object
# get start and end coordinates, save in temporary tibble, then combine with
# data from other chromosomes
starts <- start(seqs)
ends <- end(seqs)
cur_chr_tibble <- tibble(chr=chr_name, start=starts, end=ends)
CpG_coordinates <- rbind(CpG_coordinates, cur_chr_tibble)
}
View(CpG_coordinates)
CpG_occurence[[25]] <- total
#apply window to CpG locations and save in extended CpG coordinates tibble
extension_bases <- 25
CpG_coordinates_ext <- CpG_coordinates %>% mutate(end=start+extension_bases, start=start-extension_bases)
# write data to file
# write coordinates to .bed file
write.table(CpG_coordinates, file="out/global_CpGs.bed", sep="\t", col.names = F, row.names = F, quote = F)
setwd("D:/proj_epigen/aging_clocks/")
# write data to file
# write coordinates to .bed file
write.table(CpG_coordinates, file="out/global_CpGs.bed", sep="\t", col.names = F, row.names = F, quote = F)
# write CpG occurances into .csv file
write.table(CpG_occurence, file="out/global_CpGs_occurence.csv", sep=";", col.names = T, row.names = F, quote = F)
# write extended coordinates table (where window function was applied)
write.table(CpG_coordinates_ext, file="out/global_CpGs_ext.bed", sep="\t", col.names = F, row.names = F, quote = F)
# find corresponding sequences
# get sequence from genome
coordinates <- CpG_coordinates_ext
chromosomes <-coordinates[,"chr"]
starts <- coordinates[,"start"]
ends <- coordinates[,"ends"]
ends <- coordinates[,"end"]
sequences <- as.list(unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, ends, as.character=T)))
sequences <- as.list(unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, end, as.character=T)))
library(seqinr)
sequences <- as.list(unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, end, as.character=T)))
sequences <- as.list(unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, start, end, as.character=T)))
sequences <- as.list(unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, ends, as.character=T)))
sequences <- (Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, ends, as.character=T)))
sequences <- Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, ends, as.character=T)
setwd("D:/proj_epigen/aging_clocks")
#load the bed file containing genome coordinates
coordinates <- read.csv("Cpg_lists/bed_files/horvath_CpGs_hg38.bed", header=F, col.names=c("chr", "start", "ends"), sep='\t')
#load the bed file containing genome coordinates
coordinates <- read.csv("data/CpG_lists/Horvath_CpGs.bed", header=F, col.names=c("chr", "start", "ends"), sep='\t')
#load the bed file containing genome coordinates
coordinates <- read.csv("temp/CpGs_locs.bed", header=F, col.names=c("chr", "start", "ends"), sep='\t')
#load the bed file containing genome coordinates
coordinates <- read.csv("temp/CpGs_locs.bed", header=F, col.names=c("chr", "start", "ends", "weights"), sep='\t')
#import biostrings and genome
library(Biostrings)
library(BSgenome.Hsapiens.UCSC.hg38)
library(seqinr)
human_genome <- BSgenome.Hsapiens.UCSC.hg38
# get sequence from genome
chromosomes <-coordinates[,"chr"]
starts <- coordinates[,"start"]
ends <- coordinates[,"ends"]
sequences <- as.list(unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, ends, as.character=T)))
sequences <- unname(Biostrings::getSeq(BSgenome.Hsapiens.UCSC.hg38, chromosomes, starts, ends, as.character=T))

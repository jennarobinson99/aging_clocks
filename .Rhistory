group = factor(c(1, 1,1, 2, 2, 2))
group
x <- ~group
x
print(x)
x <- ~ 0+group
x
model.matrix(~0+group)
model.matrix(~group)
getwd()
setwd("D:/proj_epigen/aging_clocks")
# load data
input_file <- "data/CpG_lists/csv_files/Horvath_CpGs.csv"
horvath_data <- read.csv(input_file, header = TRUE, sep = ",")
View(horvath_data)
horvath_data <- read.csv(input_file, header = TRUE, sep = ";")
# get chromosomes vector in .bed file format
chr_list <- list(horvath_data[,"Chr"])
chromosomes <- lapply(chr_list, chr_string)
gregexpr('.', input_file)
gregexpr(".", input_file)
gregexpr(pattern = ".csv", text = input_file)
gregexpr(pattern = ".csv", text = input_file, fixed = TRUE)
gregexpr(pattern = ".", text = input_file, fixed = TRUE)
substr(input_file,0,38)
substr(input_file,0,37)
output_file <- "data/CGAS.csv"
pos_output_file <- substr(output_file, 0, gregexpr(pattern = ".", text = output_file, fixed = TRUE)-1)
a = gregexpr(pattern = ".",test=output_file,fixed=TRUE)
a = gregexpr(pattern = ".",text=output_file,fixed=TRUE)
View(a)
View(a)
a[1]
a[[1]]
a[1,1]
size[1]
dim[a]
a = grep(pattern = ".",test=output_file,fixed=TRUE)
a = grep(pattern = ".",text=output_file,fixed=TRUE)
a = grep('.', output_file)
a = grep('.', output_file, fixed = TRUE)
a
a = grep('.', output_file, fixed = TRUE, value = TRUE)
a
a = gregexpr(pattern = ".",text=output_file,fixed=TRUE)
a
a.1
View(a)
a[1]
a[[1]]
a.match.length
a[1].match.length
a[match.length]
a["match.length"]
a["match.length"][1]
a
attr(a, 'match.length')
a = gregexpr(pattern = ".",text=output_file,fixed=TRUE)
a
attr(a, 'match.length')
attributes(a)
substr("asdfjklö", 0, -1)
substr("asdfjklö", 0, 1)
substr("asdfjklö", -1, 0)
substr("asdfjklö", 0, length("asdfjklö")-1)
string <- "asdfjklö"
length(string)
as.character(string)
str_locate()
?gregexpr
a = regexpr(pattern = ".",text=output_file,fixed=TRUE)
a
a[1]
a = gregexpr(pattern = ".",text=output_file,fixed=TRUE)
a
a[1]
a[1][1]
a[[[1]]]
a[[1]]
b = a[1]
b
b[1]
b[[1]]
b[[1]][1]
a[[1]][1]
pos_output_file <- substr(output_file, 0, regexpr(pattern = ".", text = output_file, fixed = TRUE)[1]-1)
pos_output_file <- paste(substr(output_file, 0, regexpr(pattern = ".",
text = output_file, fixed = TRUE)[1]-1),
"_pos.csv")
pos_output_file <- paste(substr(output_file, 0, regexpr(pattern = ".",
text = output_file, fixed = TRUE)[1]-1),
"_pos.csv", sep="")
library(rtracklayer)
chain <- import.chain("hg18ToHg38.over.chain")
chain <- import.chain("data/chain_files/hg18ToHg38.over.chain")
#coerce dataframe into GRanges
ranges <- makeGRangesFromDataFrame(coordinates)
#load the bed file containing genome coordinates
coordinates <- read.csv("temp/horvath_cpgs.bed", header=F, col.names=c("chr", "start", "end", "weights"), sep='\t')
#coerce dataframe into GRanges
ranges <- makeGRangesFromDataFrame(coordinates)
seqnames(ranges)
ranges(ranges)
# use R implementation of Lift Over tool to convert ranges to hg38 coordinate system
hg38_ranges <- liftOver(ranges, chain)
ranges(hg38_ranges)
hg38_coordinates <- data.frame(iranges=hg38_ranges)
View(hg38_coordinates)
View(coordinates)
hg38_coordinates <- cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end)
hg38_coordinates <- cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates[,"Chr"])
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$chr)
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights)
names(hg38_coordinates) <- c("chr", "start", "end", "weight")
View(hg38_ranges)
View(hg38_coordinates)
names(hg38_coordinates)[:] <- c("chr", "start", "end", "weight")
names(hg38_coordinates)[1] <- "chr"
View(hg38_coordinates)
names(hg38_coordinates)[names(hg38_coordinates) == "V1"] <- "chr"
hg38_coordinates
View(hg38_coordinates)
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights)
names(hg38_coordinates)[names(hg38_coordinates) == "V1"] <- "chr"
View(hg38_coordinates)
hg38_coordinates
str(hg38_coordinates)
hg38_coordinates <- data.frame(cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights))
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- data.frame(cbind(hg38_coordinates$iranges.seqnames, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights))
View(hg38_coordinates)
names(hg38_coordinates) <- c("chr", "start", "end", "weight")
hg38_coordinates <- data.frame(cbind(coordinates$chr, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights))
names(hg38_coordinates) <- c("chr", "start", "end", "weight")
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- data.frame(cbind(coordinates$chr, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights))
names(hg38_coordinates) <- c("chr", "start", "end", "weight")
write.table(hg38_coordinates, file="temp/horvath_cpgs_lifted.bed", sep="\t", col.names = F, row.names = F, quote = F)
chain_file <- "data/chain_files/hg18ToHg38.over.chain"
input_file <- "temp/horvath_cpgs.bed"
output_file <- "temp/horvath_cpgs_lifted.bed"
chain <- import.chain(chain_path)
chain_file <- "../data/chain_files/hg18ToHg38.over.chain"
input_file <- "temp/horvath_cpgs.bed"
output_file <- "temp/horvath_cpgs_lifted.bed"
chain <- import.chain(chain_path)
chain_file <- "data/chain_files/hg18ToHg38.over.chain"
input_file <- "temp/horvath_cpgs.bed"
output_file <- "temp/horvath_cpgs_lifted.bed"
chain <- import.chain(chain_file)
#load the bed file containing genome coordinates
coordinates <- read.csv(input_file, header=F, col.names=c("chr", "start", "end", "weight"), sep='\t')
#coerce dataframe into GRanges
ranges <- makeGRangesFromDataFrame(coordinates)
# use R implementation of Lift Over tool to convert ranges to hg38 coordinate system
hg38_ranges <- liftOver(ranges, chain)
# get the object in the right format and write to file
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- data.frame(cbind(coordinates$chr, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weights))
# get the object in the right format and write to file
hg38_coordinates <- data.frame(iranges=hg38_ranges)
hg38_coordinates <- data.frame(cbind(coordinates$chr, hg38_coordinates$iranges.start,
hg38_coordinates$iranges.end, coordinates$weight))
names(hg38_coordinates) <- c("chr", "start", "end", "weight")
write.table(hg38_coordinates, file="temp/horvath_cpgs_lifted.bed", sep="\t", col.names = F, row.names = F, quote = F)

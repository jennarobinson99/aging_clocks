group = factor(c(1, 1,1, 2, 2, 2))
group
x <- ~group
x
print(x)
x <- ~ 0+group
x
model.matrix(~0+group)
model.matrix(~group)
getwd()
setwd("D:/proj_epigen/aging_clocks")
#load the bed file containing genome coordinates
input_file <- "data/CpG_lists/all_CpGs_hg19_ws_50_merged.bed"
coordinates <- read.csv(input_file, header=F, col.names=c("chr", "start", "end"), sep='\t')
View(coordinates)
#import biostrings and genome
library(Biostrings)
library(BSgenome.Mmusculus.UCSC.mm10)
library(seqinr)
library(seqinr)
# get sequence from genome
chromosomes <-coordinates[,"chr"]
starts <- coordinates[,"start"]
ends <- coordinates[,"end"]
sequences <- as.list(unname(Biostrings::getSeq(genome, chromosomes, starts, ends, as.character=T)))
library(BSgenome.Hsapiens.UCSC.hg19)
library(BSgenome.Hsapiens.UCSC.hg19)
genome <- BSgenome.Hsapiens.UCSC.hg19
sequences <- as.list(unname(Biostrings::getSeq(genome, chromosomes, starts, ends, as.character=T)))
View(sequences)
# random subsampling
length <-  dim(coordinates)
# random subsampling
length <-  dim(coordinates)[1]
# random subsampling
length <-  dim(coordinates)
# random subsampling
length <-  dim(coordinates)[[1]]
length
length[1]
rand_idx <- sample(1:length, 350000)
rand_sample <- coordinates[,rand_idx]
rand_sample <- coordinates[rand_idx,]
# get sequence from genome
chromosomes <-rand_sample[,"chr"]
starts <- rand_sample[,"start"]
ends <- rand_sample[,"end"]
sequences <- as.list(unname(Biostrings::getSeq(genome, chromosomes, starts, ends, as.character=T)))
# create unique identifiers for each sequence
ids <- c(1:length(chromosomes))
id_string <- paste("Sequence_", as.character(ids), sep="")
identifiers <- paste(id_string,chromosomes,sep="|")
# construct new fasta file with sequences
write.fasta(sequences, identifiers, "sequences/all_CpGs_human.fasta", open="w", as.string=T)
rand_idx <- sample(1:length, 700000)
?sample
rand_sample <- coordinates[rand_idx,]
# get sequence from genome
chromosomes <-rand_sample[,"chr"]
starts <- rand_sample[,"start"]
ends <- rand_sample[,"end"]
sequences <- as.list(unname(Biostrings::getSeq(genome, chromosomes, starts, ends, as.character=T)))
# create unique identifiers for each sequence
ids <- c(1:length(chromosomes))
id_string <- paste("Sequence_", as.character(ids), sep="")
identifiers <- paste(id_string,chromosomes,sep="|")
# construct new fasta file with sequences
write.fasta(sequences, identifiers, "sequences/all_CpGs_human_subsampled.fasta", open="w", as.string=T)
rand_idx <- sample(1:length, 500000)
rand_sample <- coordinates[rand_idx,]
# get sequence from genome
chromosomes <-rand_sample[,"chr"]
starts <- rand_sample[,"start"]
ends <- rand_sample[,"end"]
sequences <- as.list(unname(Biostrings::getSeq(genome, chromosomes, starts, ends, as.character=T)))
# create unique identifiers for each sequence
ids <- c(1:length(chromosomes))
id_string <- paste("Sequence_", as.character(ids), sep="")
identifiers <- paste(id_string,chromosomes,sep="|")
# construct new fasta file with sequences
write.fasta(sequences, identifiers, "sequences/all_CpGs_human_subsampled.fasta", open="w", as.string=T)
